name: Test action 2

on:
  workflow_dispatch:
    branches: ["master", "test-framework", "3.0.0"]

jobs:

  build-codegen:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 8 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: build codegen
        run: |
          mvn -q -B package -DskipTests
      - name: prepare codegen cli
        run: mkdir codegen-cli && cp modules/swagger-codegen-cli/target/swagger-codegen-cli.jar codegen-cli
      - name: upload codegen cli
        uses: actions/upload-artifact@v2
        with:
          name: codegen-cli
          path: codegen-cli

  generate-js-v3-petstore:

    needs: build-codegen

    runs-on: ubuntu-latest

    strategy:
      matrix:
        java: [ 8 ]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Download codegen cli
        uses: actions/download-artifact@v2
        with:
          name: codegen-cli
      - name: generate
        id: generate
        continue-on-error: true
        uses: ./.github/actions/generate
        with:
          language: ${{ jobs.generate-js-v3-petstore.env.LANGUAGE }}"
          job-name: ${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}"
          options: ${{ jobs.generate-js-v3-petstore.env.OPTIONS }}"
      - run: |
          echo "GENERATE outcome ${{ steps.generate.outcome }}"
          echo "PATH ${{ steps.generate.outputs.path }}"
          echo "LOGS ${{ steps.generate.outputs.logs }}"
      - name: test success
        if: contains(steps.generate.outcome, 'success')
        run: echo "SUCCESS ${{ steps.generate.outputs.logs }}"

      - name: upload artifacts
        if: contains(steps.generate.outcome, 'success')
        uses: actions/upload-artifact@v2
        with:
          name: generated_j${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}
          path: ${{ steps.generate.outputs.path }}
    env:
      LANGUAGE: "javascript"
      JOB_NAME: "js-petstore-v3"
      OPTIONS: " -DappName=PetstoreClient --additional-properties useES6=false"

  build-js-v3-petstore:

    needs: generate-js-v3-petstore

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: generated_${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}
          # todo replace with job output
          path: generated/${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          ls -la
          du -hcd 2
      - name: jsbuild
        id: jsbuild
        uses: ./.github/actions/jsbuild
        with:
          path: generated/${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}
          job-name: ${{ jobs.generate-js-v3-petstore.env.JOB_NAME }}
      - run: |
          echo "PATH ${{ steps.jsbuild.outputs.path }}"
          echo "LOGS ${{ steps.jsbuild.outputs.logs }}"
      - name: upload logs
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.jsbuild.outputs.logs }}
          path: ${{ steps.jsbuild.outputs.logs }}
